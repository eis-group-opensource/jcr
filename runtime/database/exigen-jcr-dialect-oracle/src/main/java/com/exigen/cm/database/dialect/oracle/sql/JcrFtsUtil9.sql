DECLARE
 stmt VARCHAR2(32000);
BEGIN
 stmt:='CREATE PACKAGE %%JCR_FTS_UTL_PKG%% AS';
 stmt := stmt ||CHR(10)|| ' PROCEDURE pack   (p_src IN clob, p_dst IN OUT blob);';
 stmt := stmt ||CHR(10)|| ' PROCEDURE pack   (p_src IN blob, p_dst IN OUT blob);';
 stmt := stmt ||CHR(10)|| ' PROCEDURE unpack (p_src IN blob, p_dst IN OUT clob);';
 stmt := stmt ||CHR(10)|| ' FUNCTION utf8txtblob_to_clob (p_src IN BLOB) RETURN CLOB;';
 stmt := stmt ||CHR(10)|| ' PROCEDURE extract(p_src IN blob, p_dst IN OUT clob, p_id IN NUMBER);';
 stmt := stmt ||CHR(10)|| 'END;';
 EXECUTE IMMEDIATE stmt;
 stmt := 'CREATE PACKAGE BODY %%JCR_FTS_UTL_PKG%% AS';
 stmt := stmt ||CHR(10)|| 'PROCEDURE pack(p_src IN clob, p_dst IN OUT blob) AS LANGUAGE JAVA';
 stmt := stmt ||CHR(10)|| ' NAME ''%%CLOBGZIP-JAVA%%.packclob(oracle.sql.CLOB, oracle.sql.BLOB[])'';';
 stmt := stmt ||CHR(10)|| 'PROCEDURE pack(p_src IN blob, p_dst IN OUT blob) AS LANGUAGE JAVA';
 stmt := stmt ||CHR(10)|| ' NAME ''%%CLOBGZIP-JAVA%%.packblob(oracle.sql.BLOB, oracle.sql.BLOB[])'';';
 stmt := stmt ||CHR(10)|| 'PROCEDURE unpack(p_src IN blob, p_dst IN OUT clob) AS LANGUAGE JAVA';
 stmt := stmt ||CHR(10)|| ' NAME ''%%CLOBGZIP-JAVA%%.unpack(oracle.sql.BLOB, oracle.sql.CLOB[])'';';
 stmt := stmt ||CHR(10)|| 'FUNCTION utf8txtblob_to_clob (p_src IN BLOB) RETURN CLOB IS';
 stmt := stmt ||CHR(10)|| ' v_clob    CLOB;';
 stmt := stmt ||CHR(10)|| ' v_varchar VARCHAR2(32767);';
 stmt := stmt ||CHR(10)|| ' v_start	 PLS_INTEGER := 1;';
 stmt := stmt ||CHR(10)|| ' v_buffer  PLS_INTEGER := 32767;';
 stmt := stmt ||CHR(10)|| ' v_sz      PLS_INTEGER := 0;';
 stmt := stmt ||CHR(10)|| 'BEGIN';
 stmt := stmt ||CHR(10)|| ' v_sz:=DBMS_LOB.GETLENGTH(p_src);';
 stmt := stmt ||CHR(10)|| ' DBMS_LOB.CREATETEMPORARY(v_clob, TRUE);';
 stmt := stmt ||CHR(10)|| ' WHILE v_start<=v_sz LOOP';
 stmt := stmt ||CHR(10)|| '  v_varchar := UTL_RAW.CAST_TO_VARCHAR2(DBMS_LOB.SUBSTR(p_src, v_buffer, v_start));';
 stmt := stmt ||CHR(10)|| '  DBMS_LOB.WRITEAPPEND(v_clob, LENGTH(v_varchar), v_varchar);';
 stmt := stmt ||CHR(10)|| '  v_start := v_start + v_buffer;';
 stmt := stmt ||CHR(10)|| ' END LOOP;';
 stmt := stmt ||CHR(10)|| ' RETURN v_clob;';
 stmt := stmt ||CHR(10)|| 'END;';
 stmt := stmt ||CHR(10)|| 'PROCEDURE extract(p_src IN blob, p_dst IN OUT clob,p_id IN NUMBER) IS';
 stmt := stmt ||CHR(10)|| ' tmp    CLOB;';
 stmt := stmt ||CHR(10)|| 'BEGIN';
 stmt := stmt ||CHR(10)|| ' DBMS_LOB.CREATETEMPORARY(tmp, true);';
 stmt := stmt ||CHR(10)|| ' CTX_DOC.IFILTER(p_src,tmp);';
 stmt := stmt ||CHR(10)|| ' INSERT INTO %%CONV-TABLE%% (%%CONV-ID%%,%%CONV-CLOB%%) values(p_id,tmp);';
 stmt := stmt ||CHR(10)|| ' DBMS_LOB.FREETEMPORARY(tmp);';
 stmt := stmt ||CHR(10)|| ' FOR x in (SELECT rowid r FROM %%CONV-TABLE%% WHERE %%CONV-ID%%=p_id) LOOP';
 stmt := stmt ||CHR(10)|| '  CTX_DOC.FILTER(''%%CONV-INDEX%%'',x.r,p_dst, plaintext=>TRUE);';
 stmt := stmt ||CHR(10)|| ' END LOOP;';
 stmt := stmt ||CHR(10)|| 'DELETE FROM %%CONV-TABLE%% WHERE %%CONV-ID%%=p_id;';
 stmt := stmt ||CHR(10)|| 'END;';
 stmt := stmt ||CHR(10)|| 'END;';
 EXECUTE IMMEDIATE stmt;
END;